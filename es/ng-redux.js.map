{"version":3,"file":"ng-redux.js","sources":["../src/utils/shallowEqual.js","../src/utils/wrapActionCreators.js","../src/components/connector.js","../src/components/digestMiddleware.js","../src/components/providedStoreMiddleware.js","../src/components/storeWrapper.js","../src/components/ngRedux.js","../src/index.js"],"sourcesContent":[" export default function shallowEqual(objA, objB) {\r\n   if (objA === objB) {\r\n     return true;\r\n   }\r\n\r\n   /* $$hashKey is added by angular when using ng-repeat, we ignore that*/\r\n   var keysA = Object.keys(objA).filter(k => k !== '$$hashKey');\r\n   var keysB = Object.keys(objB).filter(k => k !== '$$hashKey');\r\n\r\n   if (keysA.length !== keysB.length) {\r\n     return false;\r\n   }\r\n\r\n   // Test for A's keys different from B.\r\n   var hasOwn = Object.prototype.hasOwnProperty;\r\n   for (let i = 0; i < keysA.length; i++) {\r\n     if (!hasOwn.call(objB, keysA[i]) ||\r\n       objA[keysA[i]] !== objB[keysA[i]]) {\r\n       return false;\r\n     }\r\n   }\r\n\r\n   return true;\r\n }","import { bindActionCreators } from 'redux';\r\n\r\nexport default function wrapActionCreators(actionCreators) {\r\n  return dispatch => bindActionCreators(actionCreators, dispatch);\r\n}\r\n","import shallowEqual from '../utils/shallowEqual';\r\nimport wrapActionCreators from '../utils/wrapActionCreators';\r\nimport invariant from 'invariant';\r\n\r\nimport isPlainObject from 'lodash.isplainobject';\r\nimport isFunction from 'lodash.isfunction';\r\nimport isObject from 'lodash.isobject';\r\n\r\nconst assign = Object.assign;\r\nconst defaultMapStateToTarget = () => ({});\r\nconst defaultMapDispatchToTarget = dispatch => ({dispatch});\r\n\r\nexport default function Connector(store) {\r\n  return (mapStateToTarget, mapDispatchToTarget) => {\r\n\r\n    let finalMapStateToTarget = mapStateToTarget || defaultMapStateToTarget;\r\n\r\n    const finalMapDispatchToTarget = isPlainObject(mapDispatchToTarget) ?\r\n      wrapActionCreators(mapDispatchToTarget) :\r\n      mapDispatchToTarget || defaultMapDispatchToTarget;\r\n\r\n    invariant(\r\n      isFunction(finalMapStateToTarget),\r\n      'mapStateToTarget must be a Function. Instead received %s.', finalMapStateToTarget\r\n      );\r\n\r\n    invariant(\r\n      isPlainObject(finalMapDispatchToTarget) || isFunction(finalMapDispatchToTarget),\r\n      'mapDispatchToTarget must be a plain Object or a Function. Instead received %s.', finalMapDispatchToTarget\r\n      );\r\n\r\n    let slice = getStateSlice(store.getState(), finalMapStateToTarget, false);\r\n    const isFactory = isFunction(slice);\r\n\r\n    if (isFactory) {\r\n      finalMapStateToTarget = slice;\r\n      slice = getStateSlice(store.getState(), finalMapStateToTarget);\r\n    }\r\n\r\n    const boundActionCreators = finalMapDispatchToTarget(store.dispatch);\r\n\r\n    return (target) => {\r\n\r\n      invariant(\r\n        isFunction(target) || isObject(target),\r\n        'The target parameter passed to connect must be a Function or a object.'\r\n        );\r\n\r\n      //Initial update\r\n      updateTarget(target, slice, boundActionCreators);\r\n\r\n      const unsubscribe = store.subscribe(() => {\r\n        const nextSlice = getStateSlice(store.getState(), finalMapStateToTarget);\r\n        if (!shallowEqual(slice, nextSlice)) {\r\n          updateTarget(target, nextSlice, boundActionCreators, slice);\r\n          slice = nextSlice;\r\n        }\r\n      });\r\n      return unsubscribe;\r\n    }\r\n\r\n  }\r\n}\r\n\r\nfunction updateTarget(target, StateSlice, dispatch, prevStateSlice) {\r\n  if(isFunction(target)) {\r\n    target(StateSlice, dispatch, prevStateSlice);\r\n  } else {\r\n    assign(target, StateSlice, dispatch);\r\n  }\r\n}\r\n\r\nfunction getStateSlice(state, mapStateToScope, shouldReturnObject = true) {\r\n  const slice = mapStateToScope(state);\r\n\r\n  if (shouldReturnObject) {\r\n    invariant(\r\n      isPlainObject(slice),\r\n      '`mapStateToScope` must return an object. Instead received %s.',\r\n      slice\r\n      );\r\n  } else {\r\n    invariant(\r\n      isPlainObject(slice) || isFunction(slice),\r\n      '`mapStateToScope` must return an object or a function. Instead received %s.',\r\n      slice\r\n      );\r\n  }\r\n\r\n  return slice;\r\n}\r\n","export default function digestMiddleware($rootScope) {\r\n  return store => next => action => {\r\n      const res = next(action);\r\n      $rootScope.$evalAsync(res);\r\n      return res;\r\n  };\r\n}\r\n","/**\r\n * middleware for the empty store that ng-redux uses when a external store is provided\r\n * Provides two cases:\r\n * 1. NGREDUX_PASSTHROUGH, where data is coming IN to the \"fake\" store\r\n * 2. all other, where actions are dispatched out, and proxied to the true store\r\n */\r\nexport default _providedStore => store => next => action => {\r\n  return action.type === '@@NGREDUX_PASSTHROUGH'\r\n    ? next(action)\r\n    : _providedStore.dispatch(action)\r\n}\r\n","export default function wrapStore(providedStore, ngReduxStore) {\r\n  providedStore.subscribe(() => {\r\n    let newState = providedStore.getState();\r\n    ngReduxStore.dispatch({\r\n      type: '@@NGREDUX_PASSTHROUGH',\r\n      payload: newState\r\n    });\r\n  });\r\n  providedStore.dispatch({ type: '@@NGREDUX_PASSTHROUGH_INIT' })\r\n}\r\n","import Connector from './connector';\r\nimport invariant from 'invariant';\r\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\r\nimport digestMiddleware from './digestMiddleware';\r\nimport providedStoreMiddleware from './providedStoreMiddleware';\r\nimport wrapStore from './storeWrapper';\r\n\r\nimport curry from 'lodash.curry';\r\nimport isFunction from 'lodash.isfunction';\r\nimport map from 'lodash.map';\r\n\r\nconst isArray = Array.isArray;\r\n\r\nconst typeIs = curry((type, val) => typeof val === type);\r\nconst isObject = typeIs('object');\r\nconst isString = typeIs('string');\r\nconst assign  = Object.assign;\r\n\r\nexport default function ngReduxProvider() {\r\n  let _reducer = undefined;\r\n  let _middlewares = undefined;\r\n  let _storeEnhancers = undefined;\r\n  let _initialState = undefined;\r\n  let _reducerIsObject = undefined;\r\n  let _providedStore = undefined;\r\n  let _compose = undefined;\r\n\r\n  this.provideStore = (store, middlewares = [], storeEnhancers) => {\r\n    _providedStore = store;\r\n    _reducer = (state, action) => action.payload;\r\n    _storeEnhancers = storeEnhancers;\r\n    _middlewares = [...middlewares, providedStoreMiddleware(store)];\r\n  }\r\n\r\n  this.createStoreWith = (reducer, middlewares, storeEnhancers, initialState, customCompose) => {\r\n    invariant(\r\n      isFunction(reducer) || isObject(reducer),\r\n      'The reducer parameter passed to createStoreWith must be a Function or an Object. Instead received %s.',\r\n      typeof reducer\r\n    );\r\n\r\n    invariant(\r\n      !storeEnhancers || isArray(storeEnhancers),\r\n      'The storeEnhancers parameter passed to createStoreWith must be an Array. Instead received %s.',\r\n      typeof storeEnhancers\r\n    );\r\n\r\n    _reducer = reducer;\r\n    _reducerIsObject = isObject(reducer);\r\n    _storeEnhancers = storeEnhancers || [];\r\n    _middlewares = middlewares || [];\r\n    _initialState = initialState || {};\r\n    _compose = customCompose && typeof customCompose === 'function' ? customCompose : compose;\r\n  };\r\n\r\n  this.$get = ($injector) => {\r\n    const resolveMiddleware = middleware => isString(middleware)\r\n      ? $injector.get(middleware)\r\n      : middleware;\r\n\r\n    const resolvedMiddleware = map(_middlewares, resolveMiddleware);\r\n\r\n    const resolveStoreEnhancer = storeEnhancer => isString(storeEnhancer)\r\n      ? $injector.get(storeEnhancer)\r\n      : storeEnhancer;\r\n\r\n    const resolvedStoreEnhancer = map(_storeEnhancers, resolveStoreEnhancer);\r\n\r\n    if (_reducerIsObject) {\r\n      const getReducerKey = key => isString(_reducer[key])\r\n        ? $injector.get(_reducer[key])\r\n        : _reducer[key];\r\n\r\n      const resolveReducerKey = (result, key) => assign({}, result,\r\n        { [key]: getReducerKey(key) }\r\n      );\r\n\r\n      const reducersObj = Object\r\n        .keys(_reducer)\r\n        .reduce(resolveReducerKey, {});\r\n\r\n      _reducer = combineReducers(reducersObj);\r\n    }\r\n\r\n    // digestMiddleware needs to be the last one.\r\n    resolvedMiddleware.push(digestMiddleware($injector.get('$rootScope')));\r\n\r\n    // combine middleware into a store enhancer.\r\n    const middlewares = applyMiddleware(...resolvedMiddleware);\r\n\r\n    // compose enhancers with middleware and create store.\r\n    const store = createStore(_reducer, _initialState, _compose(...resolvedStoreEnhancer, middlewares));\r\n\r\n    const mergedStore = assign({}, store, { connect: Connector(store) });\r\n    \r\n    if (_providedStore) wrapStore(_providedStore, mergedStore);\r\n\r\n    return mergedStore;\r\n  };\r\n\r\n  this.$get.$inject = ['$injector'];\r\n}\r\n","import ngReduxProvider from './components/ngRedux';\r\n\r\nexport default angular.module('ngRedux', [])\r\n  .provider('$ngRedux', ngReduxProvider)\r\n  .name;"],"names":["shallowEqual","objA","objB","keysA","filter","k","keysB","length","hasOwn","Object","prototype","hasOwnProperty","i","call","wrapActionCreators","actionCreators","bindActionCreators","dispatch","assign","defaultMapStateToTarget","defaultMapDispatchToTarget","Connector","store","mapStateToTarget","mapDispatchToTarget","finalMapStateToTarget","finalMapDispatchToTarget","isPlainObject","isFunction","slice","getStateSlice","getState","isFactory","boundActionCreators","target","isObject","unsubscribe","subscribe","nextSlice","updateTarget","StateSlice","prevStateSlice","state","mapStateToScope","shouldReturnObject","digestMiddleware","$rootScope","res","next","action","$evalAsync","type","_providedStore","wrapStore","providedStore","ngReduxStore","newState","isArray","Array","typeIs","curry","val","isString","ngReduxProvider","_reducer","undefined","_middlewares","_storeEnhancers","_initialState","_reducerIsObject","_compose","provideStore","middlewares","storeEnhancers","payload","providedStoreMiddleware","createStoreWith","reducer","initialState","customCompose","compose","$get","$injector","resolveMiddleware","middleware","get","resolvedMiddleware","map","resolveStoreEnhancer","storeEnhancer","resolvedStoreEnhancer","getReducerKey","key","resolveReducerKey","result","reducersObj","reduce","combineReducers","push","applyMiddleware","createStore","mergedStore","connect","$inject","angular","module","provider","name"],"mappings":"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"}